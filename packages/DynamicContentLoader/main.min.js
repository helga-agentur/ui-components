!function(t){"use strict";class e{#t=[];#e;#s;constructor({url:t,signal:e}={}){if(!t||"string"!=typeof t)throw new Error(`Parameter url must be a non-empty String, is ${t} instead.`);if(this.#s=t,!(e&&e instanceof AbortSignal))throw new Error(`Parameter signal must be an instance of AbortSignal, is ${e} instead.`);this.#e=e}get url(){return this.#s}addUpdater(t){if("function"!=typeof t)throw new Error(`Parameter handler must be a function, is ${t} instead.`);this.#t.push(t)}#n(t){this.#t.forEach((e=>e(t)))}async fetch(){this.#n({status:"loading",url:this.#s});const t=await fetch(this.#s,{signal:this.#e}),e=await t.text(),s={response:t,content:e,status:t.ok?"loaded":"failed"};this.#n(s)}}class s{#a=[];#r=null;#i;constructor(t){if(!t)throw new Error("Missing mandatory argument requestObject");["fetch","addUpdater"].forEach((e=>{if("function"!=typeof t.prototype[e])throw new Error(`requestObject is missing mandatory method '${e}'`)})),this.#i=t}loadContent(t){if(s.#o(t),this.#r){const t="More recent interaction overrules previous interaction";this.#r.abort(t)}this.#r=new AbortController;this.#a.reduce(((e,s)=>{const n=s.assembleURL(t);if(null===n)return e;if("string"!=typeof n)throw new Error(`Expected URL returned by assembleURL funtion to be a string, got ${n} instead.`);const a=e.find((t=>t.url===n));if(a)return a.addUpdater(s.updateResponseStatus.bind(s)),e;const r=new this.#i({url:n,signal:this.#r.signal});if(r.url!==n)throw new Error(`The instantiated request object must provide a property 'url' to combine multiple requests to the same URL within one request; url is ${r.url} instead.`);return r.addUpdater(s.updateResponseStatus.bind(s)),[...e,r]}),[]).forEach((t=>t.fetch()))}static#o(t){const e=Object.keys(t).filter((t=>"searchParams"!==t));if(e.length&&console.warn("Keys %s are not supported for requestConfiguration; only 'searchParams' is supported.",e.join(", ")),Object.hasOwn(t,"searchParams")&&!(t.searchParams instanceof URLSearchParams))throw new Error(`Property 'searchParams' passed as requestConfiguration must be an instance of URLSearchParams, is ${t.searchParams} instead.`)}addUpdater(t){s.#d(t),this.#a.push(t)}static#d(t){if("function"!=typeof t.updateResponseStatus)throw new Error(`updater's 'updateResponseStatus' property must be a function; is ${t.updateResponseStatus} instead.`);if("function"!=typeof t.assembleURL)throw new Error(`updater's 'assembleURL' property must be a function; is ${t.assembleURL} instead.`)}}class n extends HTMLElement{#l;constructor(){super(),this.#l=new s(e)}connectedCallback(){this.#u(),this.#c()}#u(){this.addEventListener("loadDynamicContent",this.#h.bind(this))}#h({detail:{requestConfiguration:t}}={}){this.#l.loadContent(t)}#c(){this.addEventListener("addDynamicContentUpdater",this.#m.bind(this))}#m({detail:t}){this.#l.addUpdater(t)}static defineCustomElement(){customElements.get("dynamic-content-orchestrator")||customElements.define("dynamic-content-orchestrator",n)}}class a extends HTMLElement{connectedCallback(){this.#p()}#p(){this.addEventListener("click",this.#f.bind(this))}#f(t){const e=t.target.closest("[href]");if(null===e)return;t.preventDefault();const{search:s}=new URL(e.href,window.location.origin),n=new URLSearchParams(s);this.dispatchEvent(new CustomEvent("loadDynamicContent",{bubbles:!0,detail:{requestConfiguration:{searchParams:n,mode:"append"}}}))}static defineCustomElement(){customElements.get("link-listener")||customElements.define("link-listener",a)}}class r extends HTMLElement{connectedCallback(){this.#b()}async#b(){await new Promise((t=>{setTimeout(t)})),this.dispatchEvent(new CustomEvent("addDynamicContentUpdater",{bubbles:!0,detail:{updateResponseStatus:this.#E.bind(this),assembleURL:this.#g.bind(this)}}))}#E({status:t,content:e,response:s}){if(!["loading","loaded","failed"].includes(t))throw new Error(`Expected statusUpdate.status to be one of 'loading', 'loaded' or 'failed', got ${t} instead.`);let n;"loaded"===t?n=e:"failed"===t&&(n=`ERROR: Status ${s.status} â€“ ${e}`),this.#w(t,n)}#w(t,e){const s={loading:this.querySelector("[data-loading]"),failed:this.querySelector("[data-error]"),loaded:this.querySelector("[data-content]")};Object.keys(s).forEach((e=>{if(!s[e])throw new Error(`Make sure that the ContentUpdater has three children with the following data attributes: data-loading, data-error and data-content; missing element to display status "${t}".`);s[e].hidden=e!==t}));const n=s[t];if(["failed","loaded"].includes(t)&&(n.innerHTML=e),this.hasAttribute("data-is-main-content")){const t=window.scrollY+n.getBoundingClientRect().top;window.scrollTo({top:t,behavior:"smooth"})}}#C(){const t=this.dataset.endpointUrl;if(void 0===t)throw new Error(`Mandatory attribute data-endpoint-url is missing, value ${t} is not permitted. Use data-endpoint-url="" for an empty URL.`);return t}#g({searchParams:t}){return`${this.#C()}?${t.toString()}`}static defineCustomElement(){customElements.get("content-udpater")||customElements.define("content-updater",r)}}class i extends HTMLElement{connectedCallback(){this.#y()}#y(){this.addEventListener("change",this.#L.bind(this))}#L(){const t=this.querySelector("form");if(!t)throw new Error("Missing child form element in FilterChangeListener.");const e=new FormData(t),s=new FormData;[...e.entries()].forEach((([t,e])=>{e&&s.append(t,e)})),this.dispatchEvent(new CustomEvent("loadDynamicContent",{bubbles:!0,detail:{requestConfiguration:{searchParams:new URLSearchParams(s)}}}))}static defineCustomElement(){customElements.get("filter-change-listener")||customElements.define("filter-change-listener",i)}}class o extends HTMLElement{connectedCallback(){this.#U()}async#U(){await new Promise((t=>{setTimeout(t)})),this.dispatchEvent(new CustomEvent("addDynamicContentUpdater",{bubbles:!0,detail:{updateResponseStatus:()=>{},assembleURL:o.#E}}))}static#E({searchParams:t}){return history.pushState(null,"",`?${t.toString()}`),null}static defineCustomElement(){customElements.get("query-string-updater")||customElements.define("query-string-updater",o)}}class d extends HTMLElement{connectedCallback(){this.#b()}async#b(){await new Promise((t=>{setTimeout(t)})),this.dispatchEvent(new CustomEvent("addDynamicContentUpdater",{bubbles:!0,detail:{updateResponseStatus:this.#E.bind(this),assembleURL:this.#g.bind(this)}}))}#E(t){if("loaded"!==t.status)return;const e=JSON.parse(t.content);Object.entries(e).forEach((([t,e])=>{e.forEach((e=>this.#R(t,e)))}))}#R(t,e){const s=`.js-form-item-${t.replaceAll("_","-")}-${e.termId}`,n=this.querySelector(s);if(!n)return void console.warn("Form element with selector %s not found for facet %o with name %o; can't update it.",s,e,t);const a=n.querySelector(".input-label-element");requestAnimationFrame((()=>{n.toggleAttribute("data-empty-results",0===e.matches),a.textContent=e.computedTitle}))}#v(){const{endpointUrl:t}=this.dataset;if(void 0===t)throw new Error(`Mandatory attribute data-endpoint-url is missing, value ${t} is not permitted. Use data-endpoint-url="" for an empty URL.`);return t}#g({searchParams:t}){return`${this.#v()}?${t.toString()}`}static defineCustomElement(){customElements.get("facets-updater")||customElements.define("facets-updater",d)}}t.ContentUpdater=r,t.DynamicContentOrchestrator=n,t.FacetsUpdater=d,t.FilterChangeListener=i,t.LinkListener=a,t.QueryStringUpdater=o}({});
