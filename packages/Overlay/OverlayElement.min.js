!function(){"use strict";var e=e=>{if(!e.every((e=>e.name)))throw new Error(`canReadAttribute: Every config entry must be an object with property name; you passed ${JSON.stringify(e)} instead.`);return{readAttributes(){e.forEach((e=>{const{name:t,validate:s,property:n,transform:i}=e,a=this.getAttribute(t);if("function"==typeof s&&!s(a))throw new Error(`canWatchAttribute: Attribute ${t} does not match validation rules`);const o=i||(e=>e);this[n||t]=o(a)}))}}},t=(e,t,s)=>(e.addEventListener(t,s),()=>e.removeEventListener(t,s)),s=()=>({eventHandlers:new Map,on(e,t){this.eventHandlers.has(e)?this.eventHandlers.get(e).push(t):this.eventHandlers.set(e,[t])},off(e,t){this.eventHandlers.has(e)&&(t?this.eventHandlers.set(e,this.eventHandlers.get(e).filter((e=>e!==t))):this.eventHandlers.delete(e))},emit(e,...t){(this.eventHandlers.get(e)||[]).forEach((e=>e(...t)))}});class n{isOverlayOpen=!1;constructor(){Object.assign(this,s())}open(){this.isOverlayOpen||(this.isOverlayOpen=!0,this.emit("change"))}close(){this.isOverlayOpen&&(this.isOverlayOpen=!1,this.emit("change"))}toggle(){this.isOverlayOpen=!this.isOverlayOpen,this.emit("change")}get isOpen(){return this.isOverlayOpen}}class i extends HTMLElement{constructor(){super(),this.model=new n,Object.assign(this,e([{name:"data-name",validate:e=>!!e,property:"name"},{name:"data-background-selector",property:"backgroundSelector"},{name:"data-background-visible-class-name",property:"backgroundVisibleClassName"},{name:"data-visible-class-name",validate:e=>!!e,property:"visibleClassName"},{name:"data-disable-esc",property:"disableEsc",transform:e=>!!e},{name:"data-disable-click-outside",property:"disableClickOutside",transform:e=>!!e}]),(({eventName:e="announce-element",eventTarget:t=window,eventType:s,eventIdentifier:n,model:i}={})=>({registerAnnouncements(){t.addEventListener(e,(e=>{const{detail:t}=e;if(s&&t.eventType!==s)return;if(n&&t.eventIdentifier!==n)return;const{element:a}=e.detail;"function"!=typeof a.setModel?console.warn(`canRegisterElement: setModel is not a function on announcing element, but ${a.setModel}.`):a.setModel(i)}))}}))({eventType:"overlay-button",eventIdentifier:this.getAttribute("data-name"),eventTarget:window,model:this.model})),this.readAttributes(),this.registerAnnouncements(),this.setupModelListeners(),this.updateDOM(!0),this.setupDOMListeners()}connectedCallback(){this.backgroundSelector&&(this.background=document.querySelector(this.backgroundSelector))}disconnectedCallback(){this.background=null}handleKeyDown(e){27!==e.keyCode||this.disableEsc||this.model.close()}handleClickOutside(e){if(this.disableClickOutside)return;const{target:t}=e;this.contains(t)||this.model.close()}setupModelListeners(){this.model.on("change",this.updateDOM.bind(this))}setupDOMListeners(){window.addEventListener("openOverlay",(e=>{e.detail.name===this.name&&this.model.open()})),window.addEventListener("closeOverlay",(e=>{e.detail.name===this.name&&this.model.close()}))}updateDOM(e=!1){window.requestAnimationFrame((()=>{const t=this.model.isOpen,s={bubbles:!0,detail:{name:this.name}};if(t?(this.classList.add(this.visibleClassName),this.background&&this.backgroundVisibleClassName&&this.background.classList.add(this.backgroundVisibleClassName)):(this.classList.remove(this.visibleClassName),this.background&&this.backgroundVisibleClassName&&this.background.classList.remove(this.backgroundVisibleClassName)),!e){const e=t?"overlayOpened":"overlayClosed";this.dispatchEvent(new CustomEvent(e,s))}})),setTimeout((()=>{this.model.isOpen?(this.disconnectEsc=t(window,"keydown",this.handleKeyDown.bind(this)),this.disconnectClick=t(window,"click",this.handleClickOutside.bind(this))):(this.disconnectEsc&&this.disconnectEsc(),this.disconnectClick&&this.disconnectClick())}))}}window.customElements.get("overlay-component")||window.customElements.define("overlay-component",i)}();
